version: '3.8'

services:
  # Backend Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env
    ports:
      - "5002:5000"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped

  # Ollama LLM
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 5m
    entrypoint: ["/bin/sh", "-c"]
    command: >
      ollama serve & 
      sleep 5 && 
      ollama pull gemma:2b && 
      wait -n

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - .env
    ports:
      - "3000:80" # Serve React build via nginx
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  db_data:
  ollama_data:
